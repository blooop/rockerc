# Generated by CodiumAI
from pathlib import Path
import binascii
from rockerc.core import build_rocker_arg_injections
import tempfile
import yaml
import pathlib
import os
import subprocess
from unittest.mock import patch
import rockerc.rockerc as rockerc_mod


class TestVscodeHelpers:
    def test_converts_container_name_to_hexadecimal(self):
        container_name = "test_container"
        path = Path("/some/path")
        container_hex = binascii.hexlify(container_name.encode()).decode()
        assert container_hex == "746573745f636f6e7461696e6572"

        injections = build_rocker_arg_injections("", container_name, path)
        # Order of injection is deterministic: --detach --name ... --image-name ... --volume ...
        # build_rocker_arg_injections ensures detach, name, image-name, volume
        assert (
            f"{injections}".strip()
            == "--detach --name test_container --image-name test_container --volume /some/path:/workspaces/test_container:Z"
        )

    def test_handles_empty_container_name_string(self):
        container_name = ""
        path = Path("/some/path")
        container_hex = binascii.hexlify(container_name.encode()).decode()
        assert container_hex == ""

        injections = build_rocker_arg_injections("", container_name, path)
        # Empty container name still produces flags (edge but retained for parity with legacy test)
        assert injections == "--detach --name  --image-name  --volume /some/path:/workspaces/:Z"

    def test_run_rockerc_no_nameerror(self):
        """Regression: ensure run_rockerc accesses derive_container_name without NameError."""
        with tempfile.TemporaryDirectory() as tmp:
            tmp_path = pathlib.Path(tmp)
            config = {"args": ["user"], "image": "ubuntu:22.04"}
            with open(tmp_path / "rockerc.yaml", "w", encoding="utf-8") as f:
                yaml.safe_dump(config, f)

            def fake_run(cmd, **_kwargs):  # noqa: D401
                # Simulate docker ps, rocker launch, and any other subprocess.run usages
                if isinstance(cmd, list) and len(cmd) >= 2 and cmd[:2] == ["docker", "ps"]:
                    return subprocess.CompletedProcess(cmd, 0, stdout="", stderr="")
                if isinstance(cmd, list) and cmd and cmd[0] == "rocker":
                    return subprocess.CompletedProcess(cmd, 0, stdout="", stderr="")
                # VS Code attach attempt (code ...) succeed silently
                if isinstance(cmd, list) and cmd and cmd[0] == "code":
                    return subprocess.CompletedProcess(cmd, 0, stdout="", stderr="")
                return subprocess.CompletedProcess(cmd, 0, stdout="", stderr="")

            def fake_call(_cmd, *_a, **_k):  # noqa: D401
                return 0

            with patch.object(os, "getcwd", return_value=str(tmp_path)):
                with patch("subprocess.run", side_effect=fake_run):
                    with patch("subprocess.call", side_effect=fake_call):
                        with patch("rockerc.core.wait_for_container", return_value=True):
                            cwd = os.getcwd()
                            os.chdir(tmp_path)
                            try:
                                with patch("sys.exit") as mock_exit:
                                    with patch("rockerc.core.interactive_shell", return_value=0):
                                        rockerc_mod.run_rockerc(".")
                                    mock_exit.assert_called_with(0)
                            finally:
                                os.chdir(cwd)
